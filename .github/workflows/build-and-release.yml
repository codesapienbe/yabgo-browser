name: Build and Release

on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Prepare system for Windows builds (WineHQ, nsis, tools)
        run: |
          set -euo pipefail
          sudo dpkg --add-architecture i386 || true
          sudo mkdir -pm755 /etc/apt/keyrings || true
          sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key || true
          sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/$(lsb_release -cs)/winehq-$(lsb_release -cs).sources || true
          sudo apt update
          sudo apt install --install-recommends -y winehq-stable cabextract icoutils p7zip-full nsis || true

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application (Linux + Windows)
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: |
            release/*.AppImage
            release/*.deb
            release/*.rpm

      - name: Upload artifacts (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            release/*.exe
            release/*.msi

  create-release:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            linux-builds/*
            windows-builds/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
